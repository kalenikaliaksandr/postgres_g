CREATE TABLE test1 (a int, b text);
CREATE FUNCTION bgsession_test() RETURNS integer
LANGUAGE plpythonu
AS $$
with plpy.BackgroundSession() as a:
    for i in range(0, 10):
        a.execute("BEGIN")
        a.execute("INSERT INTO test1 (a) VALUES (%d)" % i)
        if i % 2 == 0:
            a.execute("COMMIT")
        else:
            a.execute("ROLLBACK")

return 42
$$;
SELECT bgsession_test();
 bgsession_test 
----------------
             42
(1 row)

SELECT * FROM test1;
 a | b 
---+---
 0 | 
 2 | 
 4 | 
 6 | 
 8 | 
(5 rows)

CREATE FUNCTION bgsession_test2() RETURNS integer
LANGUAGE plpythonu
AS $$
with plpy.BackgroundSession() as a:
        a.execute("BEGIN")
        a.execute("INSERT INTO test1 (a) VALUES (11)")
        rv = a.execute("SELECT * FROM test1")
        plpy.info(rv)
        a.execute("ROLLBACK")

return 42
$$;
SELECT bgsession_test2();
INFO:  <PLyResult status=5 nrows=6 rows=[{'a': 0, 'b': None}, {'a': 2, 'b': None}, {'a': 4, 'b': None}, {'a': 6, 'b': None}, {'a': 8, 'b': None}, {'a': 11, 'b': None}]>
 bgsession_test2 
-----------------
              42
(1 row)

SELECT * FROM test1;
 a | b 
---+---
 0 | 
 2 | 
 4 | 
 6 | 
 8 | 
(5 rows)

CREATE FUNCTION bgsession_test3() RETURNS integer
LANGUAGE plpythonu
AS $$
with plpy.BackgroundSession() as a:
    a.execute("DO $_$ BEGIN RAISE NOTICE 'notice'; END $_$")
    a.execute("DO $_$ BEGIN RAISE EXCEPTION 'error'; END $_$")

return 42
$$;
SELECT bgsession_test3();
NOTICE:  notice
ERROR:  error
CONTEXT:  PL/pgSQL function inline_code_block line 1 at RAISE
PL/Python function "bgsession_test3"
CREATE FUNCTION bgsession_test4() RETURNS integer
LANGUAGE plpythonu
AS $$
with plpy.BackgroundSession() as a:
    a.execute("SET client_encoding TO SJIS")

return 42
$$;
SELECT bgsession_test4();
ERROR:  cannot set client encoding in background session
CONTEXT:  PL/Python function "bgsession_test4"
TRUNCATE test1;
CREATE FUNCTION bgsession_test5() RETURNS integer
LANGUAGE plpythonu
AS $$
with plpy.BackgroundSession() as a:
    plan = a.prepare("INSERT INTO test1 (a, b) VALUES ($1, $2)", ["int4", "text"])
    a.execute_prepared(plan, [1, "one"])
    a.execute_prepared(plan, [2, "two"])

return 42
$$;
SELECT bgsession_test5();
 bgsession_test5 
-----------------
              42
(1 row)

SELECT * FROM test1;
 a |  b  
---+-----
 1 | one
 2 | two
(2 rows)

TRUNCATE test1;
CREATE FUNCTION bgsession_test7() RETURNS integer
LANGUAGE plpythonu
AS $$
with plpy.BackgroundSession() as a:
        a.execute("BEGIN")
        plan = a.prepare("INSERT INTO test1 (a) VALUES ($1)", ["int4"])
        a.execute_prepared(plan, [11])
        plan = a.prepare("SELECT * FROM test1")
        rv = a.execute_prepared(plan, [])
        plpy.info(rv)
        a.execute("ROLLBACK")

return 42
$$;
SELECT bgsession_test7();
INFO:  <PLyResult status=5 nrows=1 rows=[{'a': 11, 'b': None}]>
 bgsession_test7 
-----------------
              42
(1 row)

SELECT * FROM test1;
 a | b 
---+---
(0 rows)

CREATE FUNCTION bgsession_test8() RETURNS integer
LANGUAGE plpythonu
AS $$
with plpy.BackgroundSession() as a:
        a.execute("BEGIN")

return 42
$$;
SELECT bgsession_test8();
ERROR:  background session ended with transaction block open
CONTEXT:  PL/Python function "bgsession_test8"
TRUNCATE test1;
CREATE FUNCTION bgsession_test9a() RETURNS integer
LANGUAGE plpythonu
AS $$
bg = plpy.BackgroundSession()
GD['bg'] = bg
bg.execute("BEGIN")
bg.execute("INSERT INTO test1 VALUES (1)")

return 1
$$;
CREATE FUNCTION bgsession_test9b() RETURNS integer
LANGUAGE plpythonu
AS $$
bg = GD['bg']
bg.execute("INSERT INTO test1 VALUES (2)")
bg.execute("COMMIT")
bg.close()

return 2
$$;
SELECT bgsession_test9a();
 bgsession_test9a 
------------------
                1
(1 row)

SELECT bgsession_test9b();
 bgsession_test9b 
------------------
                2
(1 row)

SELECT * FROM test1;
 a | b 
---+---
 1 | 
 2 | 
(2 rows)

DROP TABLE test1;
